from aiogram import F, Router, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from src.keyboards.keyboards import (
    new_features_keyboard,
    tarot_spread_keyboard,
    dream_interpretation_keyboard,
    pocket_numerologist_keyboard,
    personal_astrologer_keyboard,
    NewFeaturesCallback,
    user_data_keyboard
)
from src.data.config import settings
from src.middlewares.uow_middleware import UoWSessionMiddleware
from src.services.gsheets_service import GSheetService
from src.services.sheduler_service import ShedulerService
from src.services.user_service import UserService
from src.utils.database.uow import InitUoW


router = Router()
router.message.middleware(UoWSessionMiddleware())


@router.message(Command('stop'))
async def data_change(message: types.Message, state: FSMContext, uow: InitUoW):
    user_id = message.from_user.id
    await state.clear()
    await UserService.delete_user(user_id=user_id, uow=uow)
    ShedulerService.delete_user_jobs(user_id=user_id)
    await message.answer(
        '–¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã, –Ω–∞–∂–∏–º–∞–π—Ç–µ /start'
    )
    
    
    
    
@router.message(F.text == '–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–±–µ')
@router.message(Command('change_your_information'))
async def data_change(message: types.Message, state: FSMContext):
    fsm_data = await state.get_data()
    if fsm_data.get("onboarding") is None:
        await state.update_data(data_change='data_change')
    await message.answer(
        '–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç, —á—Ç–æ–±—ã —è –º–æ–≥–ª–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —Ç–µ–±–µ –ø–æ –∏–º–µ–Ω–∏ –≤ –Ω–∞—à–∏—Ö –∑–≤—ë–∑–¥–Ω—ã—Ö –±–µ—Å–µ–¥–∞—Ö?',
        reply_markup=user_data_keyboard
    )
    await state.set_state()
        
@router.message(F.text == '–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º')
@router.message(Command('contact_admin'))
async def admin(message: types.Message, state: FSMContext):

    await message.answer(
        f'–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –º–æ–∂–µ—à—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –Ω–∞–ø—Ä—è–º—É—é: {settings.admin_tg}. –ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å –∏ —É—á–µ—Å—Ç—å —Ç–≤–æ–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è!'
    )
    
@router.message(F.text == '–ë—É–¥—É—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏')
async def new_features(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    # event_type = 'Use start command'
    # log = {
    #     "user_id": user_id
    # }
    await message.answer(
        '–£ –Ω–∞—Å –≤ –ø–ª–∞–Ω–∞—Ö –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π! –°–∫–æ—Ä–æ —Ç—ã —Å–º–æ–∂–µ—à—å –¥–µ–ª–∞—Ç—å —Ä–∞—Å–∫–ª–∞–¥—ã –¢–∞—Ä–æ, –ø–æ–ª—É—á–∞—Ç—å —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è —Å–Ω–æ–≤, –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ. –°–ª–µ–¥–∏ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –∏ –±—É–¥—å –≥–æ—Ç–æ–≤–∞ –∫ –Ω–æ–≤—ã–º –≤–æ–ª—à–µ–±–Ω—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º! ‚ú®',
        reply_markup=new_features_keyboard
    )
    
    # await state.set_state(OnbordingState.get_user_name)
    # await GSheetService.register_user(
    #     tg_id=user_id, username=message.from_user.username
    # )


@router.callback_query(F.data == 'tarot_spread')
async def tarot_spread(
    query: types.CallbackQuery, state: FSMContext
):
    await query.answer()
    await query.message.delete_reply_markup()
    await query.message.answer(
        '–°–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ, —Ç—ã —Å–º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å —Ä–∞—Å–∫–ª–∞–¥ –∫–∞—Ä—Ç –¢–∞—Ä–æ –æ–¥–Ω–∏–º –Ω–∞–∂–∞—Ç–∏–µ–º –∫–Ω–æ–ø–∫–∏! –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—à—å, –∫–∞–∫ —É–¥–æ–±–Ω–æ?\n–ë—É–¥–µ—à—å –ª–∏ —Ç—ã –∏—Å–∫–∞—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –¥–∞/–Ω–µ—Ç, –∏–ª–∏ —Ä–∞–∑–≥–∞–¥—ã–≤–∞—Ç—å –∑–∞–≥–∞–¥–∫–∏ –í—Å–µ–ª–µ–Ω–Ω–æ–π —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º ‚Äî —è —Ä–∞–∑–ª–æ–∂—É –∫–∞—Ä—Ç—ã –∏ –¥–∞–º —Ç–µ–±–µ —Å–∞–º–æ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ.\n–ß—Ç–æ —Å–∫–∞–∂–µ—à—å, –∑–∞–∏–Ω—Ç—Ä–∏–≥–æ–≤–∞–ª–∞? –ì–æ—Ç–æ–≤–∞ –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –º–∞–≥–∏—é?',
        reply_markup=tarot_spread_keyboard
    )
    
    
@router.callback_query(F.data == 'dream_interpretation')
async def dream_interpretation(
    query: types.CallbackQuery, state: FSMContext
):
    await query.answer()
    await query.message.delete_reply_markup()
    await query.message.answer(
        '–ö–∞–∫ —á–∞—Å—Ç–æ –±—ã–≤–∞–µ—Ç, –ø—Ä–æ—Å—ã–ø–∞–µ—à—å—Å—è –ø–æ—Å–ª–µ —Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —Å–Ω–∞ –∏ –¥—É–º–∞–µ—à—å: "–ù—É —á—Ç–æ —ç—Ç–æ –≤–æ–æ–±—â–µ –±—ã–ª–æ? –≠—Ç–æ —Ç–æ—á–Ω–æ —á—Ç–æ-—Ç–æ –∑–Ω–∞—á–∏—Ç!"\n–ù—É, –∞ —è –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ! –ü—Ä–µ–¥—Å—Ç–∞–≤—å —Å–µ–±–µ: —Ç—ã –º–æ–∂–µ—à—å –∑–∞–ø–∏—Å–∞—Ç—å –∞—É–¥–∏–æ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è, –∏ —è –¥–∞–º —Ç–µ–±–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Å–Ω–∞. –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –∫—Ç–æ-—Ç–æ, —Å –∫–µ–º –º–æ–∂–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –Ω–æ—á–Ω—ã–º–∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º–∏, –∏ –Ω–∏–∫—Ç–æ –Ω–µ —Å–∫–∞–∂–µ—Ç, —á—Ç–æ —ç—Ç–æ –±—Ä–µ–¥. –ö—Ä—É—Ç–æ, –ø—Ä–∞–≤–¥–∞?',
        reply_markup=dream_interpretation_keyboard
    )
    
    
@router.callback_query(F.data == 'pocket_numerologist')
async def pocket_numerologist(
    query: types.CallbackQuery, state: FSMContext
):
    await query.answer()
    await query.message.delete_reply_markup()
    await query.message.answer(
        '–ê —Ç—ã –∑–Ω–∞–ª–∞, —á—Ç–æ –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Ç–≤–æ–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è ‚Äî —ç—Ç–æ –∫–ª—é—á–µ–≤—ã–µ —Ç–æ—á–∫–∏ –≤ —Ç–≤–æ–µ–π —Å—É–¥—å–±–µ?\n–ü—Ä–µ–¥—Å—Ç–∞–≤—å, –∑–Ω–∞—è —Å–≤–æ–∏ —Å–∏–ª—å–Ω—ã–µ –∏ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã, —Å–ª–µ–¥—É—è –∑–∞–¥–∞—á–∞–º, –≤–ª–æ–∂–µ–Ω–Ω—ã–º –Ω–∞ —Ç–µ–±—è –∑–≤–µ–∑–¥–∞–º–∏, —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –∂–∏–∑–Ω–∏ –±–æ–ª—å—à–µ, —á–µ–º –¥–∞–∂–µ –º–µ—á—Ç–∞–ª–∞!\n–Ø —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ, –∫–∞–∫–æ–≤–∞ —Ç–≤–æ—è –º–∏—Å—Å–∏—è –∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ, –∏ –ø–æ–¥—Å–∫–∞–∂—É, –æ—Ç —á–µ–≥–æ –ª—É—á—à–µ –¥–µ—Ä–∂–∞—Ç—å—Å—è –ø–æ–¥–∞–ª—å—à–µ. –ì–æ—Ç–æ–≤–∞ —É–∑–Ω–∞—Ç—å —Å–≤–æ–∏ –∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Å–µ–∫—Ä–µ—Ç—ã?',
        reply_markup=pocket_numerologist_keyboard
    )
    
    
@router.callback_query(F.data == 'personal_astrologer')
async def personal_astrologer(
    query: types.CallbackQuery, state: FSMContext
):
    await query.answer()
    await query.message.delete_reply_markup()
    await query.message.answer(
        '–¢–∞–∫–æ–≥–æ —Ç—ã —Ç–æ—á–Ω–æ –Ω–µ –º–æ–≥–ª–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å, —á—Ç–æ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ–±—Ä–∞—Ç–∏—Ç—Å—è –∫ –∞—Å—Ç—Ä–æ–ª–æ–≥—É –Ω–µ –≤—ã—Ö–æ–¥—è—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n–Ø —Å–æ—Å—Ç–∞–≤–ª—é –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É –∏ –¥–∞–º –æ–±—â–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –æ —Ç–≤–æ–∏—Ö –¥–∞–Ω–Ω–æ—Å—Ç—è—Ö. –¢–∞–∫–∂–µ, —Ç—ã —Å–º–æ–∂–µ—à—å –∑–∞–¥–∞—Ç—å –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–±—è —Ç–µ–º—ã\n–î–∞–∂–µ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—é —Å–∫–æ–ª—å–∫–æ —Ç–µ–º –º—ã –±—É–¥–µ–º —Å —Ç–æ–±–æ–π –æ–±—Å—É–∂–¥–∞—Ç—å üòç –≤–æ–∑–º–æ–∂–Ω–æ, –¥–∞–∂–µ –≤—ã–±–µ—Ä–µ–º —Ç–µ–±–µ –∂–µ–Ω–∏—Ö–∞.\n',
        reply_markup=personal_astrologer_keyboard
    )
    
    
@router.callback_query(NewFeaturesCallback.filter())
async def new_features_callback(
    query: types.CallbackQuery, callback_data: NewFeaturesCallback
):
    user_id = query.message.chat.id
    await query.answer(
        '–°–ø–∞—Å–∏–±–æ, –∑–∞ –æ—Ç–≤–µ—Ç'
    )
    await query.message.delete_reply_markup()

    await GSheetService.update_user_data_features_rate(
        tg_id=user_id,
        feature=callback_data.feature,
        text=query.message.reply_markup.inline_keyboard[0][callback_data.key].text
    )
